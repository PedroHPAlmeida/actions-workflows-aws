name: Deploy Docker Beanstalk Workflow
run-name: Deploy Docker Beanstalk Workflow
on:
  workflow_call:
    inputs:
      docker-image:
        description: 'Image to be deployed with tag'
        type: 'string'
        required: true

      container-port: 
        description: 'Port of the container'
        type: number
        required: true
    secrets:
      aws_key_id:
        required: true
      aws_secret_key:
        required: true
      aws_region:
        required: true
      aws_bucket_name:
        required: true

jobs:
  beanstalk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set application name
        id: set-app-name
        run: |
          OWNER_AND_REPO=${{ github.repository }}
          REPO_NAME=$(echo "$OWNER_AND_REPO" | cut -d'/' -f2)
          echo "APP_NAME=${REPO_NAME}" >> $GITHUB_OUTPUT

      - name: Create Dockerrun.aws.json file
        run: |
          echo '{"AWSEBDockerrunVersion": "1", "Image": {"Name": "${{ inputs.docker-image }}", "Update": "true"}, "Ports": [{"ContainerPort": ${{ inputs.container-port }}, "HostPort": 80}]}' > Dockerrun.aws.json
          cat Dockerrun.aws.json

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.aws_key_id }}
          aws_secret_key: ${{ secrets.aws_secret_key }}
          region: ${{ secrets.aws_region }}
          application_name: ${{ steps.set-app-name.outputs.APP_NAME }}
          environment_name: ${{ steps.set-app-name.outputs.APP_NAME }}-${{ github.ref_name }}
          version_label: ${{ github.ref_name }}-${{ github.sha }}
          deployment_package: Dockerrun.aws.json
          existing_bucket_name: ${{ secrets.aws_bucket_name }}
          wait_for_deployment: true
